!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACLOCAL	Makefile	/^ACLOCAL = ${SHELL} \/home\/jj\/Workspace\/cpp\/borealis-test\/config\/missing --run aclocal-1.11$/;"	m
ACLOCAL_M4	Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
AGGREGATE	StockMarshal.cc	10;"	d	file:
AMTAR	Makefile	/^AMTAR = ${SHELL} \/home\/jj\/Workspace\/cpp\/borealis-test\/config\/missing --run tar$/;"	m
AM_CFLAGS	Makefile	/^AM_CFLAGS = -g -Wall -Werror $(MYFLAGS)$/;"	m
AM_CXXFLAGS	Makefile	/^AM_CXXFLAGS = -g -Wall -Werror $(MYFLAGS)$/;"	m
ANTLRINCLUDE	Makefile	/^ANTLRINCLUDE = -I\/opt\/borealis-tools\/antlr\/include$/;"	m
ANTLRLIB	Makefile	/^ANTLRLIB = \/opt\/borealis-tools\/antlr\/lib\/libantlr.a $/;"	m
ANTLR_JAR_FILE	Makefile	/^ANTLR_JAR_FILE = \/opt\/borealis-tools\/antlr\/lib\/antlr.jar$/;"	m
AR	Makefile	/^AR = ar$/;"	m
ARGS_H	args.h	2;"	d
AUTOCONF	Makefile	/^AUTOCONF = ${SHELL} \/home\/jj\/Workspace\/cpp\/borealis-test\/config\/missing --run autoconf$/;"	m
AUTOHEADER	Makefile	/^AUTOHEADER = ${SHELL} \/home\/jj\/Workspace\/cpp\/borealis-test\/config\/missing --run autoheader$/;"	m
AUTOMAKE	Makefile	/^AUTOMAKE = ${SHELL} \/home\/jj\/Workspace\/cpp\/borealis-test\/config\/missing --run automake-1.11$/;"	m
AWK	Makefile	/^AWK = gawk$/;"	m
AggregateHandler	StockMarshal.cc	/^Status  StockMarshal::AggregateHandler(ptr<StreamEvent>  event)$/;"	f	class:StockMarshal
AggregateTuple	StockMarshal.h	/^    struct AggregateTuple$/;"	s	class:StockMarshal
BDBDIR	Makefile	/^BDBDIR = $/;"	m
BDBINCLUDE	Makefile	/^BDBINCLUDE = -I\/home\/jj\/Workspace\/cpp\/borealis-test\/external\/bdb\/stub$/;"	m
BDBLIB	Makefile	/^BDBLIB = $/;"	m
BOREALISINCLUDE	Makefile	/^BOREALISINCLUDE = -I\/opt\/borealis-tools\/nmstl\/include -I\/opt\/borealis-tools\/xercesc\/include -I\/opt\/borealis-tools\/antlr\/include$/;"	m
BOREALISLIB	Makefile	/^BOREALISLIB = -L\/opt\/borealis-tools\/nmstl\/lib -lNMSTL -lexpat -lpthread -lreadline -lncurses -L\/opt\/borealis-tools\/xercesc\/lib -lxerces-c \/opt\/borealis-tools\/antlr\/lib\/libantlr.a $/;"	m
BOREALISROOT	Makefile	/^BOREALISROOT = \/home\/jj\/Workspace\/borealis_summer_2008\/borealis\/src$/;"	m
BOREALIS_SRC	Makefile	/^BOREALIS_SRC = \/home\/jj\/Workspace\/borealis_summer_2008\/borealis\/src$/;"	m
CC	Makefile	/^CC = gcc$/;"	m
CCDEPMODE	Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCLD	Makefile	/^CCLD = $(CC)$/;"	m
CFLAGS	Makefile	/^CFLAGS = -g -Wall -Werror$/;"	m
CLEANFILES	Makefile	/^CLEANFILES = ${stock_DEPENDENCIES}$/;"	m
COMPILE	Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
CONFIG_CLEAN_FILES	Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_HEADER	Makefile	/^CONFIG_HEADER = config.h$/;"	m
CPP	Makefile	/^CPP = gcc -E$/;"	m
CPPFLAGS	Makefile	/^CPPFLAGS = $/;"	m
CTAGS	Makefile	/^CTAGS = ctags$/;"	m
CXX	Makefile	/^CXX = g++$/;"	m
CXXCOMPILE	Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCPP	Makefile	/^CXXCPP = g++ -E$/;"	m
CXXDEPMODE	Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXFLAGS	Makefile	/^CXXFLAGS = -g -Wall -Werror$/;"	m
CXXLD	Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLINK	Makefile	/^CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
CYGPATH_W	Makefile	/^CYGPATH_W = echo$/;"	m
DEFAULT_INCLUDES	Makefile	/^DEFAULT_INCLUDES = -I.$/;"	m
DEFS	Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEPDIR	Makefile	/^DEPDIR = .deps$/;"	m
DEPENDENCIES	Makefile	/^DEPENDENCIES = $(BOREALIS_SRC)\/modules\/common\/libborealiscommon.la$/;"	m
DISTFILES	Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DIST_ARCHIVES	Makefile	/^DIST_ARCHIVES = $(distdir).tar.gz$/;"	m
DIST_COMMON	Makefile	/^DIST_COMMON = README $(am__configure_deps) $(srcdir)\/Makefile.am \\$/;"	m
DIST_SOURCES	Makefile	/^DIST_SOURCES = $(stock_SOURCES)$/;"	m
DSYMUTIL	Makefile	/^DSYMUTIL = $/;"	m
DUMPBIN	Makefile	/^DUMPBIN = $/;"	m
ECHO_C	Makefile	/^ECHO_C = $/;"	m
ECHO_N	Makefile	/^ECHO_N = -n$/;"	m
ECHO_T	Makefile	/^ECHO_T = $/;"	m
EGREP	Makefile	/^EGREP = \/bin\/grep -E$/;"	m
ETAGS	Makefile	/^ETAGS = etags$/;"	m
EXEEXT	Makefile	/^EXEEXT = $/;"	m
EXTERNALINCLUDE	Makefile	/^EXTERNALINCLUDE = -I\/home\/jj\/Workspace\/cpp\/borealis-test\/external\/bdb\/stub -I\/opt\/borealis-tools\/gsl\/include   $/;"	m
EXTERNALLIB	Makefile	/^EXTERNALLIB = -L\/opt\/borealis-tools\/gsl\/lib -lgsl -lgslcblas  $/;"	m
FGREP	Makefile	/^FGREP = \/bin\/grep -F$/;"	m
GREP	Makefile	/^GREP = \/bin\/grep$/;"	m
GSLDIR	Makefile	/^GSLDIR = \/opt\/borealis-tools\/gsl$/;"	m
GSLINCLUDE	Makefile	/^GSLINCLUDE = -I\/opt\/borealis-tools\/gsl\/include$/;"	m
GSLLIB	Makefile	/^GSLLIB = -L\/opt\/borealis-tools\/gsl\/lib -lgsl -lgslcblas$/;"	m
GZIP_ENV	Makefile	/^GZIP_ENV = --best$/;"	m
HAVE_DLFCN_H	config.h	5;"	d
HAVE_FCNTL_H	config.h	8;"	d
HAVE_INTTYPES_H	config.h	11;"	d
HAVE_MEMORY_H	config.h	14;"	d
HAVE_STDINT_H	config.h	17;"	d
HAVE_STDLIB_H	config.h	20;"	d
HAVE_STRINGS_H	config.h	23;"	d
HAVE_STRING_H	config.h	26;"	d
HAVE_SYS_STAT_H	config.h	32;"	d
HAVE_SYS_TYPES_H	config.h	35;"	d
HAVE_SYS_WAIT_H	config.h	38;"	d
HAVE_UNISTD_H	config.h	41;"	d
INCLUDES	Makefile	/^INCLUDES = -I\/opt\/borealis-tools\/xercesc\/include   -I\/opt\/borealis-tools\/nmstl\/include                   \\$/;"	m
INIT	args.h	11;"	d
INSTALL	Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL_DATA	Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_HEADER	Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_PROGRAM	Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_SCRIPT	Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_STRIP_PROGRAM	Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
LD	Makefile	/^LD = \/usr\/bin\/ld$/;"	m
LDADD	Makefile	/^LDADD = -L$(BOREALIS_SRC)\/modules\/common          -lborealiscommon     \\$/;"	m
LDADD_EXTRAS	Makefile	/^LDADD_EXTRAS = -ldl  -L\/opt\/borealis-tools\/nmstl\/lib -lNMSTL -lexpat -lpthread -lreadline -lncurses -L\/opt\/borealis-tools\/xercesc\/lib -lxerces-c \/opt\/borealis-tools\/antlr\/lib\/libantlr.a   -L\/opt\/borealis-tools\/gsl\/lib -lgsl -lgslcblas  $/;"	m
LDFLAGS	Makefile	/^LDFLAGS = $/;"	m
LIBOBJS	Makefile	/^LIBOBJS = $/;"	m
LIBS	Makefile	/^LIBS = $/;"	m
LIBTOOL	Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LINK	Makefile	/^LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
LIPO	Makefile	/^LIPO = $/;"	m
LN_S	Makefile	/^LN_S = ln -s$/;"	m
LTCOMPILE	Makefile	/^LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
LTCXXCOMPILE	Makefile	/^LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
LTLIBOBJS	Makefile	/^LTLIBOBJS = $/;"	m
LT_OBJDIR	config.h	45;"	d
MAIN	Makefile	/^MAIN = stock$/;"	m
MAKEINFO	Makefile	/^MAKEINFO = ${SHELL} \/home\/jj\/Workspace\/cpp\/borealis-test\/config\/missing --run makeinfo$/;"	m
MAX_BUFFER	StockMarshal.cc	5;"	d	file:
MKDIR_P	Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
NM	Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NMEDIT	Makefile	/^NMEDIT = $/;"	m
NMSTLDIR	Makefile	/^NMSTLDIR = \/opt\/borealis-tools\/nmstl$/;"	m
NMSTLINCLUDE	Makefile	/^NMSTLINCLUDE = -I\/opt\/borealis-tools\/nmstl\/include$/;"	m
NMSTLLIB	Makefile	/^NMSTLLIB = -L\/opt\/borealis-tools\/nmstl\/lib -lNMSTL -lexpat -lpthread -lreadline -lncurses$/;"	m
NMSTLSUBDIR	Makefile	/^NMSTLSUBDIR = $/;"	m
NORMAL_INSTALL	Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_UNINSTALL	Makefile	/^NORMAL_UNINSTALL = :$/;"	m
OBJDUMP	Makefile	/^OBJDUMP = objdump$/;"	m
OBJEXT	Makefile	/^OBJEXT = o$/;"	m
OCVDIR	Makefile	/^OCVDIR = $/;"	m
OCVINCLUDE	Makefile	/^OCVINCLUDE = $/;"	m
OCVLIB	Makefile	/^OCVLIB = $/;"	m
OTOOL	Makefile	/^OTOOL = $/;"	m
OTOOL64	Makefile	/^OTOOL64 = $/;"	m
PACKAGE	Makefile	/^PACKAGE = test$/;"	m
PACKAGE	config.h	48;"	d
PACKAGE_BUGREPORT	Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_BUGREPORT	config.h	51;"	d
PACKAGE_NAME	Makefile	/^PACKAGE_NAME = $/;"	m
PACKAGE_NAME	config.h	54;"	d
PACKAGE_STRING	Makefile	/^PACKAGE_STRING = $/;"	m
PACKAGE_STRING	config.h	57;"	d
PACKAGE_TARNAME	Makefile	/^PACKAGE_TARNAME = $/;"	m
PACKAGE_TARNAME	config.h	60;"	d
PACKAGE_URL	Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	config.h	63;"	d
PACKAGE_VERSION	Makefile	/^PACKAGE_VERSION = $/;"	m
PACKAGE_VERSION	config.h	66;"	d
PACKET	StockMarshal.cc	9;"	d	file:
PATH_SEPARATOR	Makefile	/^PATH_SEPARATOR = :$/;"	m
POST_INSTALL	Makefile	/^POST_INSTALL = :$/;"	m
POST_UNINSTALL	Makefile	/^POST_UNINSTALL = :$/;"	m
PRE_INSTALL	Makefile	/^PRE_INSTALL = :$/;"	m
PRE_UNINSTALL	Makefile	/^PRE_UNINSTALL = :$/;"	m
PROGRAMS	Makefile	/^PROGRAMS = $(bin_PROGRAMS)$/;"	m
Packet	StockMarshal.h	/^    struct  Packet : public TupleHeader$/;"	s	class:StockMarshal
PacketTuple	StockMarshal.h	/^    struct PacketTuple$/;"	s	class:StockMarshal
RANLIB	Makefile	/^RANLIB = ranlib$/;"	m
SED	Makefile	/^SED = \/bin\/sed$/;"	m
SET_MAKE	Makefile	/^SET_MAKE = $/;"	m
SHELL	Makefile	/^SHELL = \/bin\/bash$/;"	m
SOURCES	Makefile	/^SOURCES = $(stock_SOURCES)$/;"	m
STDC_HEADERS	config.h	69;"	d
STOCKMARSHAL_H	StockMarshal.h	2;"	d
STOCK_ENDPOINT	StockMarshal.cc	7;"	d	file:
STOCK_XML	StockMarshal.cc	4;"	d	file:
STRIP	Makefile	/^STRIP = strip$/;"	m
StockData	stock.cc	/^struct StockData$/;"	s	file:
StockData	stock.cc	/^typedef StockData StockData;$/;"	t	file:
StockMarshal	StockMarshal.h	/^    StockMarshal() {};$/;"	f	class:StockMarshal
StockMarshal	StockMarshal.h	/^class StockMarshal$/;"	c
TUPLESOURCE	Makefile	/^TUPLESOURCE = # InputTuple.h PacketTuple.h$/;"	m
VERSION	Makefile	/^VERSION = 0.1$/;"	m
VERSION	config.h	72;"	d
XERCESCINCLUDE	Makefile	/^XERCESCINCLUDE = -I\/opt\/borealis-tools\/xercesc\/include$/;"	m
XERCESCLIB	Makefile	/^XERCESCLIB = -L\/opt\/borealis-tools\/xercesc\/lib -lxerces-c$/;"	m
YFLAGS	Makefile	/^YFLAGS = $/;"	m
_client	StockMarshal.h	/^    MedusaClient      *_client;$/;"	m	class:StockMarshal
_data	StockMarshal.h	/^        PacketTuple   _data;$/;"	m	struct:StockMarshal::Packet
_eventPacket	StockMarshal.h	/^    ptr<StreamEvent>   _eventPacket;$/;"	m	class:StockMarshal
abs_builddir	Makefile	/^abs_builddir = \/home\/jj\/Workspace\/cpp\/borealis-test$/;"	m
abs_srcdir	Makefile	/^abs_srcdir = \/home\/jj\/Workspace\/cpp\/borealis-test$/;"	m
abs_top_builddir	Makefile	/^abs_top_builddir = \/home\/jj\/Workspace\/cpp\/borealis-test$/;"	m
abs_top_srcdir	Makefile	/^abs_top_srcdir = \/home\/jj\/Workspace\/cpp\/borealis-test$/;"	m
ac_ct_CC	Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CXX	Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_DUMPBIN	Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_fn_c_check_func	configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_header_compile	configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_check_header_mongrel	configure	/^ac_fn_c_check_header_mongrel ()$/;"	f
ac_fn_c_try_compile	configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_cpp	configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_link	configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_run	configure	/^ac_fn_c_try_run ()$/;"	f
ac_fn_cxx_try_compile	configure	/^ac_fn_cxx_try_compile ()$/;"	f
ac_fn_cxx_try_cpp	configure	/^ac_fn_cxx_try_cpp ()$/;"	f
ac_fn_cxx_try_link	configure	/^ac_fn_cxx_try_link ()$/;"	f
am__CONFIG_DISTCLEAN_FILES	Makefile	/^am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\$/;"	m
am__DEPENDENCIES_1	Makefile	/^am__DEPENDENCIES_1 =$/;"	m
am__EXEEXT_1	Makefile	/^am__EXEEXT_1 = stock$(EXEEXT)$/;"	m
am__aclocal_m4_deps	Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/configure.ac$/;"	m
am__cd	Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__configure_deps	Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__depfiles_maybe	Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__include	Makefile	/^am__include = include$/;"	m
am__installdirs	Makefile	/^am__installdirs = "$(DESTDIR)$(bindir)"$/;"	m
am__leading_dot	Makefile	/^am__leading_dot = .$/;"	m
am__mv	Makefile	/^am__mv = mv -f$/;"	m
am__objects_1	Makefile	/^am__objects_1 =$/;"	m
am__objects_2	Makefile	/^am__objects_2 = StockMarshal.$(OBJEXT)$/;"	m
am__quote	Makefile	/^am__quote = $/;"	m
am__remove_distdir	Makefile	/^am__remove_distdir = \\$/;"	m
am__tar	Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__untar	Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am_stock_OBJECTS	Makefile	/^am_stock_OBJECTS = $(am__objects_1) $(am__objects_2) stock.$(OBJEXT)$/;"	m
as_fn_append	config.status	/^  as_fn_append ()$/;"	f
as_fn_append	configure	/^  as_fn_append ()$/;"	f
as_fn_arith	config.status	/^  as_fn_arith ()$/;"	f
as_fn_arith	configure	/^  as_fn_arith ()$/;"	f
as_fn_error	config.status	/^as_fn_error ()$/;"	f
as_fn_error	configure	/^as_fn_error ()$/;"	f
as_fn_exit	config.status	/^as_fn_exit ()$/;"	f
as_fn_exit	configure	/^as_fn_exit ()$/;"	f
as_fn_failure	configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	config.status	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	config.status	/^as_fn_set_status ()$/;"	f
as_fn_set_status	configure	/^as_fn_set_status ()$/;"	f
as_fn_success	configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	config.status	/^as_fn_unset ()$/;"	f
as_fn_unset	configure	/^as_fn_unset ()$/;"	f
batchPacket	StockMarshal.cc	/^void  StockMarshal::batchPacket( Packet  *tuple )$/;"	f	class:StockMarshal
bin_PROGRAMS	Makefile	/^bin_PROGRAMS = $(am__EXEEXT_1)$/;"	m
bindir	Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
build	Makefile	/^build = i686-pc-linux-gnu$/;"	m
build_alias	Makefile	/^build_alias = $/;"	m
build_cpu	Makefile	/^build_cpu = i686$/;"	m
build_os	Makefile	/^build_os = linux-gnu$/;"	m
build_triplet	Makefile	/^build_triplet = i686-pc-linux-gnu$/;"	m
build_vendor	Makefile	/^build_vendor = pc$/;"	m
builddir	Makefile	/^builddir = .$/;"	m
client_args	args.h	/^void client_args(const int argc, const char* argv[], string& my_ip, int& my_port)$/;"	f
connectPacket	StockMarshal.cc	/^void  StockMarshal::connectPacket()$/;"	f	class:StockMarshal
currenttime	StockMarshal.h	/^        int32    currenttime;$/;"	m	struct:StockMarshal::AggregateTuple
data	stock.cc	/^namespace data$/;"	n	file:
datadir	Makefile	/^datadir = ${datarootdir}$/;"	m
datarootdir	Makefile	/^datarootdir = ${prefix}\/share$/;"	m
delayPacket	StockMarshal.cc	/^void  StockMarshal::delayPacket()$/;"	f	class:StockMarshal
depcomp	Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/config\/depcomp$/;"	m
distcleancheck_listfiles	Makefile	/^distcleancheck_listfiles = find . -type f -print$/;"	m
distdir	Makefile	/^distdir = $(PACKAGE)-$(VERSION)$/;"	m
distuninstallcheck_listfiles	Makefile	/^distuninstallcheck_listfiles = find . -type f -print$/;"	m
docdir	Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE}$/;"	m
dvidir	Makefile	/^dvidir = ${docdir}$/;"	m
exec_prefix	Makefile	/^exec_prefix = ${prefix}$/;"	m
file_args	args.h	/^void file_args(const int argc, const char* argv[], string& xml_query_file)$/;"	f
func_append	config.status	/^func_append ()$/;"	f
func_append	configure	/^func_append ()$/;"	f
func_append	libtool	/^func_append ()$/;"	f
func_arith	config.status	/^func_arith ()$/;"	f
func_arith	configure	/^func_arith ()$/;"	f
func_arith	libtool	/^func_arith ()$/;"	f
func_basename	config.status	/^func_basename ()$/;"	f
func_basename	configure	/^func_basename ()$/;"	f
func_basename	libtool	/^func_basename ()$/;"	f
func_check_version_match	libtool	/^func_check_version_match ()$/;"	f
func_config	libtool	/^func_config ()$/;"	f
func_dirname	config.status	/^func_dirname ()$/;"	f
func_dirname	configure	/^func_dirname ()$/;"	f
func_dirname	libtool	/^func_dirname ()$/;"	f
func_dirname_and_basename	config.status	/^func_dirname_and_basename ()$/;"	f
func_dirname_and_basename	configure	/^func_dirname_and_basename ()$/;"	f
func_dirname_and_basename	libtool	/^func_dirname_and_basename ()$/;"	f
func_echo	libtool	/^func_echo ()$/;"	f
func_emit_cwrapperexe_src	libtool	/^func_emit_cwrapperexe_src ()$/;"	f
func_emit_wrapper	libtool	/^func_emit_wrapper ()$/;"	f
func_emit_wrapper_part1	libtool	/^func_emit_wrapper_part1 ()$/;"	f
func_emit_wrapper_part2	libtool	/^func_emit_wrapper_part2 ()$/;"	f
func_enable_tag	libtool	/^func_enable_tag ()$/;"	f
func_error	libtool	/^func_error ()$/;"	f
func_execute_cmds	libtool	/^func_execute_cmds ()$/;"	f
func_extract_an_archive	libtool	/^func_extract_an_archive ()$/;"	f
func_extract_archives	libtool	/^func_extract_archives ()$/;"	f
func_fatal_configuration	libtool	/^func_fatal_configuration ()$/;"	f
func_fatal_error	libtool	/^func_fatal_error ()$/;"	f
func_fatal_help	libtool	/^func_fatal_help ()$/;"	f
func_features	libtool	/^func_features ()$/;"	f
func_generate_dlsyms	libtool	/^func_generate_dlsyms ()$/;"	f
func_grep	libtool	/^func_grep ()$/;"	f
func_help	libtool	/^func_help ()$/;"	f
func_infer_tag	libtool	/^func_infer_tag ()$/;"	f
func_lalib_p	libtool	/^func_lalib_p ()$/;"	f
func_lalib_unsafe_p	libtool	/^func_lalib_unsafe_p ()$/;"	f
func_len	config.status	/^func_len ()$/;"	f
func_len	configure	/^func_len ()$/;"	f
func_len	libtool	/^func_len ()$/;"	f
func_lo2o	config.status	/^func_lo2o ()$/;"	f
func_lo2o	configure	/^func_lo2o ()$/;"	f
func_lo2o	libtool	/^func_lo2o ()$/;"	f
func_ltwrapper_executable_p	libtool	/^func_ltwrapper_executable_p ()$/;"	f
func_ltwrapper_p	libtool	/^func_ltwrapper_p ()$/;"	f
func_ltwrapper_script_p	libtool	/^func_ltwrapper_script_p ()$/;"	f
func_ltwrapper_scriptname	libtool	/^func_ltwrapper_scriptname ()$/;"	f
func_missing_arg	libtool	/^func_missing_arg ()$/;"	f
func_mkdir_p	libtool	/^func_mkdir_p ()$/;"	f
func_mktempdir	libtool	/^func_mktempdir ()$/;"	f
func_mode_compile	libtool	/^func_mode_compile ()$/;"	f
func_mode_execute	libtool	/^func_mode_execute ()$/;"	f
func_mode_finish	libtool	/^func_mode_finish ()$/;"	f
func_mode_help	libtool	/^func_mode_help ()$/;"	f
func_mode_install	libtool	/^func_mode_install ()$/;"	f
func_mode_link	libtool	/^func_mode_link ()$/;"	f
func_mode_uninstall	libtool	/^func_mode_uninstall ()$/;"	f
func_opt_split	config.status	/^func_opt_split ()$/;"	f
func_opt_split	configure	/^func_opt_split ()$/;"	f
func_opt_split	libtool	/^func_opt_split ()$/;"	f
func_quote_for_eval	libtool	/^func_quote_for_eval ()$/;"	f
func_quote_for_expand	libtool	/^func_quote_for_expand ()$/;"	f
func_show_eval	libtool	/^func_show_eval ()$/;"	f
func_show_eval_locale	libtool	/^func_show_eval_locale ()$/;"	f
func_source	libtool	/^func_source ()$/;"	f
func_stripname	config.status	/^func_stripname ()$/;"	f
func_stripname	configure	/^func_stripname ()$/;"	f
func_stripname	libtool	/^func_stripname ()$/;"	f
func_to_host_path	libtool	/^func_to_host_path ()$/;"	f
func_to_host_pathlist	libtool	/^func_to_host_pathlist ()$/;"	f
func_usage	libtool	/^func_usage ()$/;"	f
func_verbose	libtool	/^func_verbose ()$/;"	f
func_version	libtool	/^func_version ()$/;"	f
func_warning	libtool	/^func_warning ()$/;"	f
func_win32_libid	libtool	/^func_win32_libid ()$/;"	f
func_write_libtool_object	libtool	/^func_write_libtool_object ()$/;"	f
func_xform	config.status	/^func_xform ()$/;"	f
func_xform	configure	/^func_xform ()$/;"	f
func_xform	libtool	/^func_xform ()$/;"	f
getTimeValue	StockMarshal.h	/^    static timeval   getTimeValue(uint8  *tuple)$/;"	f	class:StockMarshal
host	Makefile	/^host = i686-pc-linux-gnu$/;"	m
host_alias	Makefile	/^host_alias = $/;"	m
host_cpu	Makefile	/^host_cpu = i686$/;"	m
host_os	Makefile	/^host_os = linux-gnu$/;"	m
host_triplet	Makefile	/^host_triplet = i686-pc-linux-gnu$/;"	m
host_vendor	Makefile	/^host_vendor = pc$/;"	m
htmldir	Makefile	/^htmldir = ${docdir}$/;"	m
includedir	Makefile	/^includedir = ${prefix}\/include$/;"	m
infodir	Makefile	/^infodir = ${datarootdir}\/info$/;"	m
install_sh	Makefile	/^install_sh = ${SHELL} \/home\/jj\/Workspace\/cpp\/borealis-test\/config\/install-sh$/;"	m
install_sh_DATA	Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_PROGRAM	Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_SCRIPT	Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
launchDiagram	StockMarshal.cc	/^int32  StockMarshal::launchDiagram(string  xml)  \/\/ Path of an initial xml file.$/;"	f	class:StockMarshal
libdir	Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libexecdir	Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
localedir	Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localstatedir	Makefile	/^localstatedir = ${prefix}\/var$/;"	m
lt_ECHO	Makefile	/^lt_ECHO = echo$/;"	m
main	stock.cc	/^int main()$/;"	f
mandir	Makefile	/^mandir = ${datarootdir}\/man$/;"	m
maxprice	StockMarshal.h	/^        double    maxprice;$/;"	m	struct:StockMarshal::AggregateTuple
mkdir_p	Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkinstalldirs	Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
oldincludedir	Makefile	/^oldincludedir = \/usr\/include$/;"	m
open	StockMarshal.cc	/^int32  StockMarshal::open()$/;"	f	class:StockMarshal
openInputOutput	StockMarshal.cc	/^void  StockMarshal::openInputOutput()$/;"	f	class:StockMarshal
outputHandler	StockMarshal.cc	/^Status  StockMarshal::outputHandler(ptr<StreamEvent>  event)$/;"	f	class:StockMarshal
parse	args.h	/^void parse(const char* optarg, int& add1, int& add0)$/;"	f
parse	args.h	/^void parse(const char* optarg, string& ip, int& port)$/;"	f
parseRecord	stock.cc	/^void parseRecord(string record, time_t *mytime, float *price)$/;"	f
parse_ips	args.h	/^void parse_ips(const char* optarg, vector< pair<string, int> >& addresses)$/;"	f
pdfdir	Makefile	/^pdfdir = ${docdir}$/;"	m
pkgdatadir	Makefile	/^pkgdatadir = $(datadir)\/test$/;"	m
pkgincludedir	Makefile	/^pkgincludedir = $(includedir)\/test$/;"	m
pkglibdir	Makefile	/^pkglibdir = $(libdir)\/test$/;"	m
pkglibexecdir	Makefile	/^pkglibexecdir = $(libexecdir)\/test$/;"	m
prefix	Makefile	/^prefix = \/usr\/local$/;"	m
price	StockMarshal.h	/^        double    price;$/;"	m	struct:StockMarshal::PacketTuple
price	stock.cc	/^    float price;$/;"	m	struct:StockData	file:
processRead	stock.cc	/^void processRead(string filename)$/;"	f
program_transform_name	Makefile	/^program_transform_name = s,x,x,$/;"	m
prototypes	configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
psdir	Makefile	/^psdir = ${docdir}$/;"	m
readStock	stock.cc	/^void readStock()$/;"	f
receivedAggregate	stock.cc	/^void StockMarshal::receivedAggregate(AggregateTuple  *tuple)$/;"	f	class:StockMarshal
runClient	StockMarshal.cc	/^void  StockMarshal::runClient()$/;"	f	class:StockMarshal
sbindir	Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sendPacket	StockMarshal.cc	/^void  StockMarshal::sendPacket( uint32  sleep )$/;"	f	class:StockMarshal
sentPacket	stock.cc	/^void StockMarshal::sentPacket()$/;"	f	class:StockMarshal
setStringField	StockMarshal.cc	/^void  StockMarshal::setStringField(string  value,$/;"	f	class:StockMarshal
sharedstatedir	Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
srcdir	Makefile	/^srcdir = .$/;"	m
stdArgs	args.h	/^void stdArgs(const int argc, const char* argv[], string& ip, int& port, int* run_time = NULL)$/;"	f
stock	stock.cc	/^    list<StockData> stock;$/;"	m	namespace:data	file:
stock_DEPENDENCIES	Makefile	/^stock_DEPENDENCIES = StockMarshal.cc StockMarshal.h$/;"	m
stock_LDADD	Makefile	/^stock_LDADD = $(LDADD)$/;"	m
stock_OBJECTS	Makefile	/^stock_OBJECTS = $(am_stock_OBJECTS)$/;"	m
stock_SOURCES	Makefile	/^stock_SOURCES = ${TUPLESOURCE} ${stock_DEPENDENCIES}  \\$/;"	m
subdir	Makefile	/^subdir = .$/;"	m
subscribeAggregate	StockMarshal.cc	/^void  StockMarshal::subscribeAggregate()$/;"	f	class:StockMarshal
sysconfdir	Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | xz -c >$(distdir).tar.xz$/;"	m
target_alias	Makefile	/^target_alias = $/;"	m
terminateClient	StockMarshal.cc	/^void  StockMarshal::terminateClient()$/;"	f	class:StockMarshal
time	StockMarshal.h	/^        int32    time;$/;"	m	struct:StockMarshal::AggregateTuple
time	StockMarshal.h	/^        int32    time;$/;"	m	struct:StockMarshal::PacketTuple
time	stock.cc	/^    time_t time;$/;"	m	struct:StockData	file:
top_build_prefix	Makefile	/^top_build_prefix = $/;"	m
top_builddir	Makefile	/^top_builddir = .$/;"	m
top_distdir	Makefile	/^top_distdir = $(distdir)$/;"	m
top_srcdir	Makefile	/^top_srcdir = .$/;"	m
transform	Makefile	/^transform = $(program_transform_name)$/;"	m
usage	args.h	/^void usage(const char* prog_name)$/;"	f
~StockMarshal	StockMarshal.h	/^   ~StockMarshal() {};$/;"	f	class:StockMarshal
